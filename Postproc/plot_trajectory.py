#user/bin/python3
#######################################################################################################
#                                                                                                     #
#   This script will draw the motion trajectory graphs of all the atoms in your MD system.            #
#   Please run our 'MSD.py' script before running this script.                                        #
#   Verfy the 'POSCAR' and all the '.pos' files generated by 'MSD.py' script in the work directory.   #
#                                                                                                     #
#######################################################################################################


import numpy as np
import os
import linecache
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

posx, posy, posz = [], [], []
system={}
path = './winter'
os.makedirs(path)
species = linecache.getline('POSCAR', 6).strip(' ').split()
num_species = linecache.getline('POSCAR', 7).strip(' ').split()

for i in range(len(species)):
    system[species[i]] = int(num_species[i])

for atom in system.keys():
    num = system[atom]
#   file_atom = "../pos/"+atom+".pos"
    file_atom = atom+".pos"
    pos_all, pos_modify = [], []
    with open(file_atom) as file:
        for line in file:
            ll = line.strip(' ').split()
            pos_all.append([float(ll[1]), float(ll[2]),float(ll[3])])
    n = int(len(pos_all)/num)
    time = []
    for i in range(n):
        pos_modify.append(pos_all[i*num:(i+1)*num])
        time.append(i)
    array_pos = np.array(pos_modify)
    for j in range(num):
        x, y, z = array_pos[:,j,0], array_pos[:,j,1], array_pos[:,j,2]
        fig = plt.figure(figsize=(10,10), dpi=125)
        ax = Axes3D(fig)
        ax.scatter(x, y, z, s=10, c=time, cmap=plt.cm.winter_r, edgecolor='none')
        ax.set_xlabel('X', fontdict={'size':15, 'color':'black'})
        ax.set_ylabel('Y', fontdict={'size':15, 'color':'black'})
        ax.set_zlabel('Z', fontdict={'size':15, 'color':'black'})
        ax.set_title(atom+'_'+str(j), {'fontsize':20})
        plt.savefig(path+'/'+atom+'_'+str(j)+'.jpg', bbox_inches='tight')
        plt.close(fig)
        
        # plt.subplot(111,projection='3d') #创建一个三维的绘图工程
        # plt.scatter(x, y, z, c=time, cmap=plt.cm.Blues, edgecolor='none', size=15)
        # plt.show()
        # plt.savefig(atom+'_'+j+'.png', bbox_inches='tight')
    
